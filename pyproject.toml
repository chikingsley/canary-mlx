[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "canary-mlx-converter"
version = "0.1.0"
description = "Convert NVIDIA Canary models from NeMo to MLX format"
# readme = "README_CANARY_CONVERSION.md"
requires-python = ">=3.10"
license = "Apache-2.0"
authors = [
    { name = "Canary MLX Team" },
]
keywords = [
    "mlx",
    "canary",
    "nemo",
    "asr",
    "nvidia",
    "apple",
    "speech",
    "recognition",
    "conversion",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "safetensors>=0.4.0",
    "pydantic>=2.0.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "PyYAML>=6.0",
    "huggingface-hub>=0.16.0",
    "mlx>=0.22.1",
    "numpy>=1.24.0",
    "dacite>=1.9.2",
    "librosa>=0.11.0",
    "ruff>=0.12.0",
    "mypy>=1.16.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "types-PyYAML",
    "types-requests",
]

[project.scripts]
canary-to-mlx = "canary_to_mlx_converter:app"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["ARG", "S101"]

[tool.ruff.isort]
known-first-party = ["parakeet_mlx", "canary_to_mlx_converter"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mlx.*",
    "librosa.*",
    "safetensors.*",
    "dacite.*",
    "torch.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=canary_to_mlx_converter",
    "--cov=parakeet_mlx",
]

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250516",
]
